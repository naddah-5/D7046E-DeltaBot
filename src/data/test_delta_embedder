import unittest 
from delta_embedder import DeltaEmbedder
import torch

class TestDeltaEmbedder(unittest.TestCase):

    def test_init(self):
        parser = DeltaEmbedder()
        list = ["queen"]
        res = [ 0.0052, -0.1436, -0.0693,  0.1235,  0.1318, -0.0889, -0.0713, -0.2168,
        -0.1973,  0.0557, -0.0757, -0.3809,  0.1040, -0.0008,  0.1328,  0.1128,
         0.0728, -0.0469,  0.0659,  0.0942,  0.1904,  0.1367, -0.2363, -0.1187,
         0.0654, -0.0532, -0.3086,  0.0918,  0.1885, -0.1670, -0.1562, -0.1309,
        -0.0825,  0.2129, -0.3555, -0.1318,  0.0962,  0.2637, -0.0947,  0.1836,
         0.1069, -0.4160,  0.2695, -0.0277,  0.1758, -0.1128, -0.0041,  0.1455,
         0.1562,  0.2676, -0.0179,  0.0986,  0.0530, -0.0312, -0.1631, -0.0581,
        -0.3438, -0.1729,  0.1143, -0.0903,  0.1348,  0.2793, -0.0498,  0.1299,
         0.1758, -0.2217, -0.0119,  0.1406, -0.1816,  0.1187,  0.1611,  0.2148,
        -0.2119,  0.1270, -0.1001,  0.1367,  0.1270,  0.0153,  0.1045, -0.0278,
        -0.0603,  0.0222,  0.1816, -0.0674,  0.0491,  0.1543, -0.2500,  0.1396,
         0.2949,  0.1064,  0.3359, -0.2227, -0.1250, -0.0530,  0.1924,  0.0684,
         0.0698, -0.0520,  0.1445,  0.0045, -0.0101, -0.1484,  0.2178, -0.1953,
        -0.3906,  0.0776, -0.5742, -0.0791, -0.0405, -0.1875,  0.2539,  0.1572,
         0.1250,  0.1406,  0.2012, -0.0586,  0.1689, -0.2812,  0.1719,  0.1914,
         0.1211, -0.1504, -0.0070, -0.2373,  0.1396, -0.0084, -0.0471,  0.1465,
        -0.0569,  0.1021,  0.0845,  0.2119, -0.0183,  0.5039, -0.0486,  0.2217,
        -0.2559,  0.0342,  0.1582, -0.0337,  0.0674, -0.2520,  0.0461, -0.0728,
         0.0796,  0.0422, -0.0013,  0.2021, -0.1309, -0.0603,  0.0378,  0.1357,
         0.1118, -0.2461, -0.2393, -0.2363, -0.0432, -0.0291,  0.2354, -0.0039,
        -0.0503,  0.1846,  0.5039, -0.0067, -0.0347, -0.0757,  0.0615, -0.3145,
        -0.0376,  0.2363, -0.1279,  0.1543,  0.2969,  0.0271, -0.1709, -0.2246,
         0.0024,  0.1060, -0.0332,  0.0146, -0.2158,  0.2471, -0.0742, -0.1021,
         0.1689, -0.0503,  0.2080, -0.0386, -0.2227,  0.2754, -0.0596, -0.0176,
         0.0179,  0.0889,  0.1289,  0.1826,  0.1445,  0.1040, -0.1328, -0.3262,
         0.0039, -0.1138, -0.0505, -0.1309,  0.0221, -0.1465,  0.1074,  0.2305,
         0.1523,  0.2275,  0.0483,  0.0679, -0.0679, -0.2578,  0.1123,  0.0036,
        -0.1201, -0.2129,  0.1123,  0.1216,  0.0684,  0.0491,  0.2734, -0.0030,
        -0.0038,  0.0019,  0.1875, -0.2910,  0.0903,  0.2637, -0.2559, -0.2871,
        -0.4082,  0.1055,  0.3965, -0.0728, -0.0432, -0.0635, -0.0006, -0.1152,
         0.3145, -0.2227,  0.1357, -0.0197,  0.1533,  0.0036, -0.1201,  0.0649,
         0.1621, -0.1670,  0.0327, -0.0035,  0.1885,  0.1934,  0.1328,  0.0679,
        -0.3418, -0.0835, -0.2949, -0.0210,  0.0889,  0.3242, -0.3691, -0.0859,
        -0.0496,  0.1318,  0.0442,  0.3594,  0.2148,  0.2656, -0.2734,  0.2354,
         0.1143,  0.0879,  0.1875, -0.3320,  0.1514, -0.0361, -0.1191,  0.2773,
         0.1084, -0.0728,  0.2324,  0.0022,  0.2383, -0.2490, -0.1235, -0.1592,
        -0.0060,  0.1455, -0.0046, -0.2256, -0.3789, -0.3770, -0.0825, -0.0413,
         0.1680, -0.0469,  0.1631,  0.1543]
        self.assertEqual(str(parser(list,300)), str(torch.tensor(res)))

unittest.main() 
    


